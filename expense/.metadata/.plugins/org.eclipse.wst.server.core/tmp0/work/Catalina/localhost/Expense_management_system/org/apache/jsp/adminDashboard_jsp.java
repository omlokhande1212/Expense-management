/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-11-16 17:57:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Admin Dashboard - Expense Management System</title>\r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- FontAwesome Icons -->\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- SweetAlert2 -->\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.5.4/dist/sweetalert2.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- Custom CSS -->\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background: #f4f6f9;\r\n");
      out.write("        }\r\n");
      out.write("        .card {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .card-header {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-danger:hover, .btn-warning:hover {\r\n");
      out.write("            opacity: 0.8;\r\n");
      out.write("        }\r\n");
      out.write("        .chart-container {\r\n");
      out.write("            height: 350px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container mt-5\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <!-- Stats Cards -->\r\n");
      out.write("            <div class=\"col-md-3\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Total Users</div>\r\n");
      out.write("                    <div class=\"card-body text-center\">\r\n");
      out.write("                        <h3 id=\"totalUsers\">0</h3>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-3\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Total Expenses</div>\r\n");
      out.write("                    <div class=\"card-body text-center\">\r\n");
      out.write("                        <h3 id=\"totalExpenses\">0</h3>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-3\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Categories</div>\r\n");
      out.write("                    <div class=\"card-body text-center\">\r\n");
      out.write("                        <h3 id=\"totalCategories\">0</h3>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-3\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Recent Activity</div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <ul id=\"recentActivityList\" class=\"list-group\">\r\n");
      out.write("                            <!-- Recent activities will be dynamically populated here -->\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Charts -->\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Expenses by Category</div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <div class=\"chart-container\">\r\n");
      out.write("                            <canvas id=\"categoryChart\"></canvas>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">Monthly Expenses</div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <div class=\"chart-container\">\r\n");
      out.write("                            <canvas id=\"monthlyChart\"></canvas>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Manage Users Section -->\r\n");
      out.write("        <div class=\"row mt-4\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">\r\n");
      out.write("                        <h5>Manage Users</h5>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <button class=\"btn btn-primary\" onclick=\"addUser()\">Add New User</button>\r\n");
      out.write("                        <button class=\"btn btn-danger ml-3\" onclick=\"deleteUser()\">Delete User</button>\r\n");
      out.write("                        <button class=\"btn btn-warning ml-3\" onclick=\"editUser()\">Edit User</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- SweetAlert2 Script -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.5.4/dist/sweetalert2.all.min.js\"></script>\r\n");
      out.write("    <!-- Bootstrap JS -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <!-- Chart.js -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Fetch data and populate stats (Replace with real API/Database calls)\r\n");
      out.write("        document.addEventListener(\"DOMContentLoaded\", function() {\r\n");
      out.write("            // Mock Data (Replace with actual database data)\r\n");
      out.write("            let totalUsers = 120;\r\n");
      out.write("            let totalExpenses = 45000;\r\n");
      out.write("            let totalCategories = 5;\r\n");
      out.write("            let recentActivity = [\r\n");
      out.write("                \"User John Doe added an expense of $300\",\r\n");
      out.write("                \"Admin deleted a user: jane_doe\",\r\n");
      out.write("                \"User Bob updated an expense\"\r\n");
      out.write("            ];\r\n");
      out.write("\r\n");
      out.write("            // Populate the dashboard with data\r\n");
      out.write("            document.getElementById('totalUsers').textContent = totalUsers;\r\n");
      out.write("            document.getElementById('totalExpenses').textContent = `$");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalExpenses}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("            document.getElementById('totalCategories').textContent = totalCategories;\r\n");
      out.write("\r\n");
      out.write("            // Populate recent activities list\r\n");
      out.write("            let activityList = document.getElementById('recentActivityList');\r\n");
      out.write("            recentActivity.forEach(function(activity) {\r\n");
      out.write("                let li = document.createElement('li');\r\n");
      out.write("                li.classList.add('list-group-item');\r\n");
      out.write("                li.textContent = activity;\r\n");
      out.write("                activityList.appendChild(li);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Setup Charts\r\n");
      out.write("            var categoryCtx = document.getElementById('categoryChart').getContext('2d');\r\n");
      out.write("            var monthlyCtx = document.getElementById('monthlyChart').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("            // Category Chart (Mock data)\r\n");
      out.write("            var categoryChart = new Chart(categoryCtx, {\r\n");
      out.write("                type: 'pie',\r\n");
      out.write("                data: {\r\n");
      out.write("                    labels: ['Food', 'Transport', 'Rent', 'Entertainment', 'Other'],\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: 'Expenses by Category',\r\n");
      out.write("                        data: [3000, 5000, 15000, 7000, 4000], // Mock values\r\n");
      out.write("                        backgroundColor: ['#ff6f61', '#ffcc5c', '#66b3ff', '#99cc99', '#f2b5d4'],\r\n");
      out.write("                    }]\r\n");
      out.write("                },\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    plugins: {\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            position: 'top',\r\n");
      out.write("                        },\r\n");
      out.write("                    },\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Monthly Expenses Chart (Mock data)\r\n");
      out.write("            var monthlyChart = new Chart(monthlyCtx, {\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                data: {\r\n");
      out.write("                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: 'Monthly Expenses',\r\n");
      out.write("                        data: [5000, 6000, 4500, 7000, 8000, 5500, 6000], // Mock values\r\n");
      out.write("                        borderColor: '#007bff',\r\n");
      out.write("                        fill: false\r\n");
      out.write("                    }]\r\n");
      out.write("                },\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    scales: {\r\n");
      out.write("                        x: {\r\n");
      out.write("                            ticks: {\r\n");
      out.write("                                beginAtZero: true\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        y: {\r\n");
      out.write("                            beginAtZero: true\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Admin Actions: Add, Edit, Delete User (Dummy Functions)\r\n");
      out.write("        function addUser() {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: 'Add New User',\r\n");
      out.write("                text: 'Enter the details for the new user',\r\n");
      out.write("                input: 'text',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Add User',\r\n");
      out.write("                cancelButtonText: 'Cancel'\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function deleteUser() {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: 'Delete User',\r\n");
      out.write("                text: 'Are you sure you want to delete this user?',\r\n");
      out.write("                icon: 'warning',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Yes, Delete',\r\n");
      out.write("                cancelButtonText: 'Cancel'\r\n");
      out.write("            }).then((result) => {\r\n");
      out.write("                if (result.isConfirmed) {\r\n");
      out.write("                    Swal.fire('Deleted!', 'The user has been deleted.', 'success');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function editUser() {\r\n");
      out.write("            Swal.fire({\r\n");
      out.write("                title: 'Edit User',\r\n");
      out.write("                text: 'Update the details of the user',\r\n");
      out.write("                input: 'text',\r\n");
      out.write("                showCancelButton: true,\r\n");
      out.write("                confirmButtonText: 'Update User',\r\n");
      out.write("                cancelButtonText: 'Cancel'\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
