/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-11-17 05:40:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class viewexpense_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>View Expense</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            height: 100vh; \r\n");
      out.write("        }\r\n");
      out.write("        header {\r\n");
      out.write("            background: #4CAF50; \r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            height: 10%; \r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .user-actions {\r\n");
      out.write("            position: relative; \r\n");
      out.write("        }\r\n");
      out.write("        .icon-button {\r\n");
      out.write("            background: white;\r\n");
      out.write("            color: #4CAF50;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            border-radius: 50%; \r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background 0.3s;\r\n");
      out.write("            font-size: 24px; \r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .icon-button:hover {\r\n");
      out.write("            background: #ddd; \r\n");
      out.write("        }\r\n");
      out.write("        .dropdown {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 0;\r\n");
      out.write("            background: white;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            z-index: 1;\r\n");
      out.write("            animation: fadeIn 0.5s ease;\r\n");
      out.write("        }\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from { opacity: 0; }\r\n");
      out.write("            to { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown a {\r\n");
      out.write("            display: block;\r\n");
      out.write("            color: #4CAF50;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            transition: background 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .dropdown a:hover {\r\n");
      out.write("            background: #f1f1f1; \r\n");
      out.write("        }\r\n");
      out.write("        .content {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex: 1; \r\n");
      out.write("        }\r\n");
      out.write("        .sidebar {\r\n");
      out.write("            width: 250px;\r\n");
      out.write("            background-color: #4CAF50; \r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-top: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar a {\r\n");
      out.write("            display: block;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar a:hover {\r\n");
      out.write("            background: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        form {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        input[type=\"date\"], input[type=\"submit\"] {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin: 0 10px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 12px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        tr:nth-child(even) {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .sidebar {\r\n");
      out.write("                width: 100%;\r\n");
      out.write("                height: auto;\r\n");
      out.write("                position: relative;\r\n");
      out.write("            }\r\n");
      out.write("            .main-content {\r\n");
      out.write("                margin: 20px 0;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <center><h1>Welcome, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.uname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("...!!!</h1></center>\r\n");
      out.write("        <div class=\"user-actions\">\r\n");
      out.write("            <button class=\"icon-button\" onclick=\"toggleDropdown()\">\r\n");
      out.write("                <i class=\"fas fa-user-circle\"></i>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"dropdown\" id=\"userDropdown\">\r\n");
      out.write("                <a href=\"login.jsp\">Login</a>\r\n");
      out.write("                <a href=\"logout.jsp\">Logout</a>\r\n");
      out.write("                <a href=\"addAccount.jsp\">Add Account</a>\r\n");
      out.write("                <a href=\"profile.jsp\">Profile</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <div class=\"sidebar\">\r\n");
      out.write("            <h2>Expenses Menu</h2>\r\n");
      out.write("            <a href=\"addexpense.jsp\">Add New Expense</a>\r\n");
      out.write("            <a href=\"view_expense.jsp\">View All Expenses</a>\r\n");
      out.write("            <a href=\"reports.jsp\">View Reports</a>\r\n");
      out.write("            <a href=\"manage_categories.jsp\">Manage Categories</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <h1>View Expenses by Date</h1>\r\n");
      out.write("            <form method=\"get\" action=\"view_expense.jsp\">\r\n");
      out.write("                <label for=\"startDate\">Start Date:</label>\r\n");
      out.write("                <input type=\"date\" id=\"startDate\" name=\"startDate\" required>\r\n");
      out.write("                <label for=\"endDate\">End Date:</label>\r\n");
      out.write("                <input type=\"date\" id=\"endDate\" name=\"endDate\" required>\r\n");
      out.write("                <input type=\"submit\" value=\"Filter Expenses\">\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            ");

                String startDate = request.getParameter("startDate");
                String endDate = request.getParameter("endDate");

                if (startDate != null && endDate != null) {
                    Connection con = null;
                    PreparedStatement pst = null;
                    ResultSet rs = null;

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/expense_management", "root", "Root@123");

                        String query = "SELECT * FROM add_expense WHERE date BETWEEN ? AND ?";
                        pst = con.prepareStatement(query);
                        pst.setDate(1, java.sql.Date.valueOf(startDate));
                        pst.setDate(2, java.sql.Date.valueOf(endDate));

                        rs = pst.executeQuery();
                        if (!rs.isBeforeFirst()) {
                            out.println("<h3>No records found for the selected dates.</h3>");
                        } else {
                            out.println("<table>");
                            out.println("<thead><tr><th>ID</th><th>Description</th><th>Amount</th><th>Date</th><th>Category</th></tr></thead>");
                            out.println("<tbody>");
                            while (rs.next()) {
                                out.println("<tr>");
                                out.println("<td>" + rs.getInt("id") + "</td>");
                                out.println("<td>" + rs.getString("description") + "</td>");
                                out.println("<td>" + rs.getDouble("amount") + "</td>");
                                out.println("<td>" + rs.getDate("date") + "</td>");
                                out.println("<td>" + rs.getString("category") + "</td>");
                                out.println("</tr>");
                            }
                            out.println("</tbody>");
                            out.println("</table>");
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                        out.println("<h3>Error occurred while fetching data. Please try again later.</h3>");
                    } finally {
                        try {
                            if (rs != null) rs.close();
                            if (pst != null) pst.close();
                            if (con != null) con.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                        }
                    }
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function toggleDropdown() {\r\n");
      out.write("            const dropdown = document.getElementById('userDropdown');\r\n");
      out.write("            dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        window.onclick = function(event) {\r\n");
      out.write("            if (!event.target.matches('.icon-button')) {\r\n");
      out.write("                const dropdowns = document.getElementsByClassName(\"dropdown\");\r\n");
      out.write("                for (let i = 0; i < dropdowns.length; i++) {\r\n");
      out.write("                    const openDropdown = dropdowns[i];\r\n");
      out.write("                    if (openDropdown.style.display === 'block') {\r\n");
      out.write("                        openDropdown.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
